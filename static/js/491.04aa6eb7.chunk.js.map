{"version":3,"file":"static/js/491.04aa6eb7.chunk.js","mappings":"iRAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iP,SCAVE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,kBCRYE,EAAWN,EAAAA,GAAAA,GAAH,wEAKRO,EAAiBP,EAAAA,GAAAA,IAAH,wCAIdQ,EAAcR,EAAAA,GAAAA,IAAH,8DAKXS,EAAeT,EAAAA,GAAAA,IAAH,0BC8CzB,EAvDqB,WAAO,IAAD,IACnBU,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACT,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAYC,IATAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,mCAAG,qGACWC,EAAAA,EAAAA,IAAaP,GADxB,OACVG,EADU,OAEhBC,EAAgBD,EAAaK,MAFb,2CAAH,qDAInBF,GACG,GAAE,CAACN,IAEiB,OAAjBG,EAAJ,CAGAM,QAAQC,IAAIP,GAGZ,IAAMQ,EAAY,oBAAGb,EAASc,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACvCC,EAAkBX,EAAaY,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAC1E,OACE,6BACE,SAAC7B,EAAD,CAAUC,GAAIoB,EAAd,6BAEA,UAAChB,EAAD,YACE,SAACC,EAAD,WACE,gBAAKwB,IAAG,UAAKC,EAAAA,IAAL,OAAoBlB,EAAamB,aAAeC,IAAI,QAE9D,UAAC1B,EAAD,YACE,wBACCM,EAAaqB,SAEd,sCACA,uBACCrB,EAAasB,YAEd,oCACA,uBACGX,WAIP,mDACA,UAACpB,EAAD,YACE,SAAC,KAAD,CAAMH,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,yBAEF,SAAC,KAAD,MAjCH,CAoCF,C","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;","import { HiArrowLeft } from \"react-icons/hi\";\nimport { StyledLink } from \"./BackLink.styled\"\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const AditInfo = styled.ul`\ndisplay: inline-flex;\nflex-direction: column;\n`\n\nexport const MovieContainer = styled.div`\ndisplay: flex;\n`\n\nexport const MovieImgBox = styled.div`\ndisplay: flex;\npadding-right: 20px;\n`\n\nexport const MovieInfoBox = styled.div`\n\n`\n\n","import { useParams, useLocation, Link, Outlet } from \"react-router-dom\";\nimport { BackLink } from \"../../components/BackLink/BackLink\";\nimport { getMovieById } from \"../../API\";\nimport { useEffect, useState } from \"react\";\nimport { BASE_IMG_URL } from \"../../API\";\nimport {AditInfo, MovieContainer, MovieImgBox, MovieInfoBox} from \"./MovieDetails.styled\"\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n const [responseData, setResponseData] = useState(null)  \n\n\n  useEffect(() => {\n \n    const fetchData = async () => {\n      const responseData = await getMovieById(movieId)\n      setResponseData(responseData.data);\n    }\nfetchData()\n  }, [movieId])\n\n  if (responseData === null) {\n    return\n  }\n  console.log(responseData)\n\n  \n  const backLinkHref = location.state?.from ?? \"/movies\";\n  const getGenresString = responseData.genres.map(genre => genre.name).join(' ');\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Back to movies</BackLink>\n     \n      <MovieContainer>\n        <MovieImgBox>\n          <img src={`${BASE_IMG_URL}${responseData.poster_path}`} alt=\"\" />\n        </MovieImgBox>\n        <MovieInfoBox>\n          <h2>\n          {responseData.title}\n          </h2>\n          <h3>Overview</h3>\n          <p>\n          {responseData.overview}\n          </p>\n          <h3>Genres</h3>\n          <p>\n            {getGenresString}\n          </p>\n          </MovieInfoBox>\n      </MovieContainer>\n      <h3>Aditional information</h3>\n      <AditInfo>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </AditInfo>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;"],"names":["StyledLink","styled","Link","BackLink","to","children","size","AditInfo","MovieContainer","MovieImgBox","MovieInfoBox","location","useLocation","movieId","useParams","useState","responseData","setResponseData","useEffect","fetchData","getMovieById","data","console","log","backLinkHref","state","from","getGenresString","genres","map","genre","name","join","src","BASE_IMG_URL","poster_path","alt","title","overview"],"sourceRoot":""}