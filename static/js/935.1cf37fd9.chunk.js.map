{"version":3,"file":"static/js/935.1cf37fd9.chunk.js","mappings":"+OAEaA,EAAYC,EAAAA,GAAAA,IAAH,2GAMTC,EAAeD,EAAAA,GAAAA,IAAH,uHASZE,EAAYF,EAAAA,GAAAA,GAAH,mG,SCdTG,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UAEGK,EAAOG,KAAI,SAACC,GAAD,OACV,SAACP,EAAD,WACE,SAAC,KAAD,CAAMQ,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAxC,UAEE,SAACH,EAAD,UAAYM,EAAMK,UAHHL,EAAME,GADf,KAUjB,E,SChBYI,EAAUd,EAAAA,GAAAA,IAAH,sJAQPe,EAAQf,EAAAA,GAAAA,MAAH,+FAMLgB,GAAOhB,EAAAA,EAAAA,IAAOiB,EAAAA,IAAPjB,CAAH,+FCfJkB,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACN,EAAD,YACE,SAACE,EAAD,KACA,SAACD,EAAD,CACEM,KAAK,OACLF,MAAOA,EACPC,SAAU,SAACE,GAAD,OAAOF,EAASE,EAAEC,OAAOJ,MAAzB,MAIjB,E,kBCsBD,EA7Be,WAAO,IAAD,EACnB,GAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAS,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAG9CC,EAAAA,EAAAA,YAAU,WACJF,IAGLG,EAAAA,EAAAA,IAAaH,GAAWI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcT,EAAUS,EAAKC,OAA7B,GAC/B,GAAE,CAACN,IASF,OACE,iCACE,SAACX,EAAD,CAAWC,MAAOU,EAAWT,SARP,SAACP,GAEzBe,EAD4B,KAATf,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAG9C,KAKG,SAACV,EAAD,CAAWC,OAAQA,MAGxB,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const MovieWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport { Container, MovieWrapper, MovieName } from \"./MovieList.styled\";\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      \n      {movies.map((movie) => (\n        <MovieWrapper key={movie.id}>\n          <Link to={`${movie.id}`} state={{ from: location }}>\n            \n            <MovieName>{movie.name}</MovieName>\n          </Link>\n        </MovieWrapper>\n      ))}\n    </Container>\n  );\n};","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;","import { Wrapper, Input, Icon } from \"./SearchBox.styled\";\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n","import { useSearchParams } from \"react-router-dom\";\nimport { MovieList } from \"../components/MovieList/MovieList\"\nimport { SearchBox } from \"../components/SearchBox/SearchBox\";\nimport { getMovieById } from \"../API\";\nimport { useEffect, useState } from \"react\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([])\n  const [searchParams, setSearchParams] = useSearchParams();\n  \n  const movieName = searchParams.get(\"name\") ?? \"\";\n\n\n  useEffect(() => {\n   if (!movieName) {\n    return;\n  }\n   getMovieById(movieName).then(({ data }) => setMovies(data.result))\n}, [movieName])\n  \n\n  const updateQueryString = (name) => {\n    const nextParams = name !== \"\" ? { name } : {};\n    setSearchParams(nextParams);\n    \n  };\n\n  return (\n    <>\n      <SearchBox value={movieName} onChange={updateQueryString} />\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;"],"names":["Container","styled","MovieWrapper","MovieName","MovieList","movies","location","useLocation","map","movie","to","id","state","from","name","Wrapper","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","useState","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","getMovieById","then","data","result"],"sourceRoot":""}